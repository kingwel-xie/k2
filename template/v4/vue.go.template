{{$tableComment:=.TableComment}}
<template>
  <BasicLayout>
    <template #wrapper>
      <el-card class="box-card">
        <el-form ref="queryForm" :model="queryParams" :inline="true" label-width="68px">
          {{ range .Columns -}}
          {{- $isInteger := false -}}
          {{- $isFloat := false -}}
          {{- if eq .GoType "int" -}}{{- $isInteger = true -}}{{- end -}}
          {{- if eq .GoType "float64" -}}{{- $isFloat = true -}}{{- end -}}
          {{- $x := .Queryable -}}
          {{- if ($x) -}}
          <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
            {{ if ne .DictType "" -}}
            <DictSelect v-model="queryParams.{{.JsonField}}" dict="{{.DictType}}" placeholder="{{.ColumnComment}}" clearable size="small" />
              {{- else -}}
            <el-input{{- if or ($isFloat) ($isInteger) -}}-number{{- end }} v-model="queryParams.{{.JsonField}}" {{- if ($isInteger) }} :precision="0" {{- end }} placeholder="请输入{{.ColumnComment}}" clearable size="small" @keyup.enter.native="handleQuery" />
            {{- end }}
          </el-form-item>
          {{ end -}}
          {{- end -}}

          <el-form-item>
            <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
            <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
          </el-form-item>
        </el-form>

        <el-row :gutter="10" class="mb8">
          <el-col :span="1.5">
            <el-button v-permisaction="['{{.PackageName}}:{{.BusinessName}}:add']" type="primary" icon="el-icon-plus" size="mini" @click="handleAdd">新增</el-button>
          </el-col>
          <el-col :span="1.5">
            <el-button v-permisaction="['{{.PackageName}}:{{.BusinessName}}:edit']" type="success" icon="el-icon-edit" size="mini" :disabled="single" @click="handleUpdate">修改</el-button>
          </el-col>
          <el-col :span="1.5">
            <el-button v-permisaction="['{{.PackageName}}:{{.BusinessName}}:remove']" type="danger" icon="el-icon-delete" size="mini" :disabled="multiple" @click="handleDelete">删除</el-button>
          </el-col>
          {{ if (.HasExport) -}}
          <el-col :span="1.5">
            <el-dropdown v-permisaction="['{{.PackageName}}:{{.BusinessName}}:list']" size="mini" @command="handleExport">
              <el-button type="warning" icon="el-icon-download" size="mini">
                导出...<i class="el-icon-arrow-down el-icon--right" />
              </el-button>
              <el-dropdown-menu slot="dropdown">
                <el-dropdown-item v-if="!multiple" command="0">当前选中</el-dropdown-item>
                <el-dropdown-item command="1">当前页</el-dropdown-item>
                <el-dropdown-item command="2">按查询条件</el-dropdown-item>
              </el-dropdown-menu>
            </el-dropdown>
          </el-col>
          {{- end }}
        </el-row>

        <el-table ref="mainTable" v-loading="loading" element-loading-text="加载中..." element-loading-spinner="el-icon-loading" :data="{{.BusinessName}}List" stripe border highlight-current-row @selection-change="handleSelectionChange" @sort-change="handleSortChange">
          <el-table-column type="selection" width="55" align="center" />
          {{ range .Columns -}}
          {{- $x := .NotOnList -}}
          {{- if not ($x) -}}
            {{- if ne .DictType "" -}}
          <el-table-column v-fmt.dict="'{{.DictType}}'" label="{{.ColumnComment}}" align="center" prop="{{.JsonField}}" :show-overflow-tooltip="true" />
              {{- else -}}
                {{- if eq .HtmlType "datetime" -}}
          <el-table-column v-fmt.datetime label="{{.ColumnComment}}" align="center" prop="{{.JsonField}}" :show-overflow-tooltip="true" />
                  {{- else if eq .HtmlType "el-rate" -}}
          <el-table-column label="{{.ColumnComment}}" align="center" :show-overflow-tooltip="true">
            <template slot-scope="scope">
              <el-rate v-model="scope.row.{{.JsonField}}" disabled />
            </template>
          </el-table-column>
                  {{- else -}}
                    {{- if eq .GoType "float64" -}}
          <el-table-column v-fmt.float label="{{.ColumnComment}}" align="center" prop="{{.JsonField}}" :show-overflow-tooltip="true" />
                    {{- else if eq .GoType "bool" -}}
          <el-table-column v-fmt.bool="['是', '否']" label="{{.ColumnComment}}" align="center" prop="{{.JsonField}}" :show-overflow-tooltip="true" />
                    {{- else -}}
          <el-table-column label="{{.ColumnComment}}" align="center" prop="{{.JsonField}}" :show-overflow-tooltip="true" {{- if (.Sortable) }} sortable="custom" {{- end }} />
                    {{- end -}}
                {{- end -}}
              {{- end -}}
            {{ end }}
          {{ end -}}

          <el-table-column label="操作" align="center" class-name="small-padding fixed-width" width="110px">
            <template slot-scope="scope">
              <el-button v-permisaction="['{{.PackageName}}:{{.BusinessName}}:edit']" size="mini" type="text" icon="el-icon-edit" @click="handleUpdate(scope.row)">修改</el-button>
              <el-button v-permisaction="['{{.PackageName}}:{{.BusinessName}}:remove']" size="mini" type="text" icon="el-icon-delete" @click="handleDelete(scope.row)">删除</el-button>
            </template>
          </el-table-column>
        </el-table>

        <pagination v-show="total>0" :total="total" :page.sync="queryParams.pageIndex" :limit.sync="queryParams.pageSize" @pagination="getList" />

        <!-- 添加或修改对话框 -->
        <el-dialog :title="title" :visible.sync="open" width="500px">
          <el-form ref="form" v-ffiov :model="form" :rules="rules" label-width="100px">
            <el-row :gutter="10" class="mb8">
              {{ range .Columns -}}
              {{- $isInteger := false -}}
              {{- $isFloat := false -}}
              {{- if eq .GoType "int" -}}{{- $isInteger = true -}}{{- end -}}
              {{- if eq .GoType "float64" -}}{{- $isFloat = true -}}{{- end -}}
              {{- $x := .NotOnInsert -}}
              {{ if not ($x) -}}
              {{- if (.AutoInc) -}}
              {{- else if eq .GoField "CreatedAt" -}}
              {{- else if eq .GoField "UpdatedAt" -}}
              {{- else if eq .GoField "DeletedAt" -}}
              {{- else if eq .GoField "UpdateBy" -}}
              {{- else if eq .GoField "CreateBy" -}}
              {{- else -}}
              <el-col :span="24">
                {{ if eq .Comment "" -}}
                <el-form-item label="{{.ColumnComment}}" prop="{{.JsonField}}">
                {{- else -}}
                <el-form-item prop="{{.JsonField}}">
                  <span slot="label">{{.ColumnComment}}<el-tooltip content="{{ .Comment }}" placement="top"><i class="el-icon-info" /></el-tooltip></span>
                    {{- end }}
                  {{ if eq "input" .HtmlType -}}
                  <el-input{{- if or ($isFloat) ($isInteger) -}}-number{{- end }} v-model="form.{{.JsonField}}" {{- if ($isInteger) }} :precision="0" {{- end }} placeholder="{{.ColumnComment}}" {{- if or (.NotOnUpdate) (.IsPk) }} :disabled="isEdit" {{- end }} />
                  {{- else if eq "select" .HtmlType -}}
                    {{- if ne .DictType "" -}}
                  <DictSelect v-model="form.{{.JsonField}}" dict="{{.DictType}}" placeholder="{{.ColumnComment}}" {{- if or (.NotOnUpdate) (.IsPk) }} :disabled="isEdit" {{- end }} />
                    {{- end -}}
                  {{- else if eq "radio" .HtmlType -}}
                    {{- if ne .DictType "" -}}
                  <DictRadioGroup v-model="form.{{.JsonField}}" dict="{{.DictType}}" {{- if or (.NotOnUpdate) (.IsPk) }} :disabled="isEdit" {{- end }} />
                    {{- end -}}
                  {{- else if eq "file" .HtmlType -}}
                  <el-input v-model="form.{{.JsonField}}" placeholder="图片" />
                  <el-button type="primary" @click="fileShow{{.GoField}}">选择文件</el-button>
                  {{- else if eq "datetime" .HtmlType -}}
                  <el-date-picker v-model="form.{{.JsonField}}" type="datetime" placeholder="选择日期"></el-date-picker>
                  {{- else if eq "textarea" .HtmlType -}}
                  <el-input v-model="form.{{.JsonField}}" type="textarea" :rows="2" placeholder="请输入内容"></el-input>
                  {{- else if eq "switch" .HtmlType -}}
                  <el-switch v-model="form.{{.JsonField}}" active-text="是" inactive-text="否" />
                  {{- else if eq "el-rate" .HtmlType -}}
                  <el-rate v-model="form.{{.JsonField}}" show-score />
                  {{- end }}
                </el-form-item>
              </el-col>
                {{- end }}
              {{ end -}}
            {{- end -}}
            </el-row>
          </el-form>
          <div slot="footer" class="dialog-footer">
            <el-button type="primary" :loading="saving" @click="submitForm">确 定</el-button>
            <el-button @click="cancel">取 消</el-button>
          </div>
        </el-dialog>
      </el-card>
    </template>
  </BasicLayout>
</template>

<script>
import { add{{.ClassName}}, del{{.ClassName}}, get{{.ClassName}}, list{{.ClassName}}, update{{.ClassName}} } from '@/api/{{ .PackageName}}/{{ .ModuleFrontName}}'
{{ if (.HasExport) -}}
import { formatJson } from '@/utils'
{{- end }}

export default {
  name: '{{.ClassName}}',
  components: {
  },
  data() {
    return {
      // 遮罩层
      loading: true,
      saving: false,
      // 选中数组
      ids: [],
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 总条数
      total: 0,
      // 弹出层标题
      title: '',
      // 是否显示弹出层
      open: false,
      isEdit: false,
      // 列表数据
      {{.BusinessName}}List: [],
      // 查询参数
      queryParams: {
        pageIndex: 1,
        pageSize: 10,
        {{ range .Columns }}
        {{- if (.Queryable) -}}
        {{.JsonField}}: undefined,
        {{ end -}}
        {{- end }}
      },
      // 表单参数
      form: {
      },
      // 表单校验
      rules: {
        {{ range .Columns -}}
        {{- if (.Queryable) -}}
        {{.JsonField}}: [{ required: true, message: '{{.ColumnComment}}不能为空', trigger: 'blur' }],
        {{ end -}}
        {{- end }}
      }
    }
  },
  created() {
    this.getList()
  },
  methods: {
    /** 查询参数列表 */
    getList() {
      this.loading = true
      list{{.ClassName}}(this.addDateRange(this.queryParams, this.dateRange)).then(response => {
        this.{{.BusinessName}}List = response.data.list
        this.total = response.data.count
        this.loading = false
      }).catch(() => {
        this.loading = false
      })
    },
    // 取消按钮
    cancel() {
      this.open = false
      this.reset()
    },
    // 表单重置
    reset() {
      this.form = {
      {{ range .Columns}}
      {{- $x := .NotOnInsert -}}
      {{- if not ($x) -}}
      {{- if eq .GoField "CreatedAt" -}}
      {{- else if eq .GoField "UpdatedAt" -}}
      {{- else if eq .GoField "DeletedAt" -}}
      {{- else if eq .GoField "UpdateBy" -}}
      {{- else if eq .GoField "CreateBy" -}}
      {{- else }}
        {{.JsonField}}: undefined,
      {{- end }}
      {{- end -}}
      {{- end }}
    }
      this.resetForm('form')
    },
    // 文件
    {{range .Columns}}
    {{- if eq .HtmlType "file" -}}
    fileShow{{.GoField}}: function() {
      this.fileOpen = true
      this.fileIndex = '{{.JsonField}}'
    },
    {{ end -}}
    {{- end -}}
    /** 搜索按钮操作 */
    handleQuery() {
      this.queryParams.pageIndex = 1
      this.getList()
    },
    /** 重置按钮操作 */
    resetQuery() {
      this.dateRange = []
      this.resetForm('queryForm')
      this.handleQuery()
    },
    /** 新增按钮操作 */
    handleAdd() {
      this.reset()
      this.open = true
      this.title = '添加{{.TableComment}}'
      this.isEdit = false
    },
    // 多选框选中数据
    handleSelectionChange(selection) {
      this.ids = selection.map(item => item.{{.PkJsonField}})
      this.single = selection.length !== 1
      this.multiple = !selection.length
    },
    /** 排序回调函数 */
    handleSortChange({ column, prop, order }) {
      Object.keys(this.queryParams).forEach(x => {
        if (x.length > 5 && x.endsWith('Order')) {
          delete this.queryParams[x]
        }
      })
      if (order === 'descending') {
        this.queryParams[prop + 'Order'] = 'desc'
      } else if (order === 'ascending') {
        this.queryParams[prop + 'Order'] = 'asc'
      } else {
        this.queryParams[prop + 'Order'] = undefined
      }
      this.getList()
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.reset()
      const {{.PkJsonField}} = row.{{.PkJsonField}} || this.ids
      this.loading = true
      get{{.ClassName}}({{.PkJsonField}}).then(response => {
        this.form = response.data
        this.open = true
        this.title = '修改{{.TableComment}}'
        this.isEdit = true
        this.loading = false
      }).catch(() => {
        this.loading = false
      })
    },
    /** 提交按钮 */
    submitForm: function() {
      this.$refs['form'].validate(valid => {
        if (valid) {
          this.saving = true
          if (this.isEdit) {
            update{{.ClassName}}(this.form).then(response => {
              this.msgSuccess(response.msg)
              this.open = false
              this.saving = false
              // reload the row and refresh
              const foundIndex = this.{{.BusinessName}}List.findIndex(x => x.{{.PkJsonField}} === this.form.{{.PkJsonField}})
              if (foundIndex !== -1) {
                get{{.ClassName}}(this.form.{{.PkJsonField}}).then(response => {
                  this.{{.BusinessName}}List[foundIndex] = response.data
                  this.$refs.mainTable.setCurrentRow(this.{{.BusinessName}}List[foundIndex], true)
                  this.$refs.mainTable.clearSelection()
                })
              }
            }).catch(() => {
              this.saving = false
            })
          } else {
            add{{.ClassName}}(this.form).then(response => {
              this.msgSuccess(response.msg)
              this.open = false
              this.saving = false
              this.getList()
            }).catch(() => {
              this.saving = false
            })
          }
        }
      })
    },
    /** 删除按钮操作 */
    handleDelete(row) {
      const Ids = (row.{{.PkJsonField}} && [row.{{.PkJsonField}}]) || this.ids

      this.$confirm('是否确认删除编号为"' + Ids + '"的数据项?', '警告', {
        confirmButtonText: '确定',
        cancelButtonText: '取消',
        type: 'warning'
      }).then(function() {
        return del{{.ClassName}}({ 'ids': Ids })
      }).then((response) => {
        this.msgSuccess(response.msg)
        this.open = false
        this.getList()
      }).catch(() => {})
    }
    {{- if (.HasExport) -}},
    export2Excel(tHeader, filterVal, filename, data) {
      const filtered = formatJson(filterVal, data)
      import('@/vendor/Export2Excel').then(excel => {
        excel.export_json_to_excel({
          header: tHeader,
          data: filtered,
          filename: filename,
          autoWidth: true, // Optional
          bookType: 'xlsx' // Optional
        })
      })
    },
    /** 导出按钮操作 */
    handleExport(choice) {
      const tHeader = [
        {{- range .Columns -}}
        {{- if not (.NotOnList) -}}
        '{{.ColumnComment}}',
        {{- end -}}
        {{- end }}]
      const filterVal = [
        {{- range .Columns -}}
        {{- if not (.NotOnList) -}}
        '{{.JsonField}}',
        {{- end -}}
        {{- end }}]
      const filename = '{{.TableComment}}'
      switch (choice) {
        case '0':
          this.export2Excel(tHeader, filterVal, filename, this.$refs.mainTable.selection)
          break
        case '1':
          this.export2Excel(tHeader, filterVal, filename, this.{{.BusinessName}}List)
          break
        case '2':
          this.$confirm('是否导出满足当前查询条件的数据项（最多10000项）?', '请确认', {
            confirmButtonText: '确定',
            cancelButtonText: '取消',
            type: 'warning'
          }).then(() => {
            const params = Object.assign({}, this.queryParams)
            params.pageIndex = 1
            params.pageSize = 10000
            this.loading = true
            list{{.ClassName}}(this.addDateRange(params, this.dateRange)).then(response => {
              this.loading = false
              this.export2Excel(tHeader, filterVal, filename, response.data.list)
            }).catch(_ => {
              this.loading = false
            })
          })
          break
      }
    }
    {{- end }}
  }
}
</script>
